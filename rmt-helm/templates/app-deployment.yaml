---
{{- $component := "app" -}}
{{- $image := .Values.app.image -}}
{{- $initImage := .Values.app.init.image -}}
{{- $autoscaling := .Values.app.autoscaling -}}
{{- $replicaCount := .Values.app.replicaCount -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rmt.fullname" . }}-{{ $component }}
  labels:
    {{- include "rmt.labels" . | nindent 4 }}
    component: {{ $component }}
spec:
  {{- if not $autoscaling.enabled }}
  replicas: {{ $replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rmt.selectorLabels" . | nindent 6 }}
      component: {{ $component }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (printf "%s/%s-configmap.yaml" $.Template.BasePath $component) . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rmt.selectorLabels" . | nindent 8 }}
        component: {{ $component }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rmt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: "{{ .Chart.Name }}-{{ $component }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ $image.repository }}:{{ $image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ $image.pullPolicy | default "IfNotPresent" }}
        ports:
          - name: {{ $component }}
            containerPort: 4224
            protocol: TCP
        env:
        - name: MYSQL_HOST
          value: {{ .Values.app.mysql.host | default (printf "%s-db" (include "rmt.fullname" . )) }}
        - name: MYSQL_DATABASE
          value: {{ .Values.app.mysql.database | default .Values.db.mysql.database }}
        - name: MYSQL_USER
          value: {{ .Values.app.mysql.user | default .Values.db.mysql.user }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ include "rmt.fullname" . }}-db"
              key: password
        - name: SCC_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "rmt.fullname" . }}-{{ $component }}
              key: username
        - name: SCC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "rmt.fullname" . }}-{{ $component }}
              key: password
        - name: SCC_PRODUCT_ENABLE
          valueFrom:
            configMapKeyRef:
              name: {{ include "rmt.fullname" . }}-{{ $component }}
              key: products_enable
        - name: SCC_PRODUCT_DISABLE
          valueFrom:
            configMapKeyRef:
              name: {{ include "rmt.fullname" . }}-{{ $component }}
              key: products_disable
        volumeMounts:
        - name: {{ include "rmt.fullname" . }}-{{ $component }}-pv
          mountPath: /var/lib/rmt
      volumes:
      - name: {{ include "rmt.fullname" . }}-{{ $component }}-pv
        persistentVolumeClaim:
          claimName: {{ include "rmt.fullname" . }}-{{ $component }}
      initContainers:
      - name: "{{ .Chart.Name }}-{{ $component }}-init"
        image: "{{ $initImage.repository }}:{{ $initImage.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ $initImage.pullPolicy | default "IfNotPresent" }}
        command: ['sh', '-c', 'until mysqladmin ping -h ${MYSQL_HOST} --silent; do echo waiting for mariadb; sleep 2; done;']
        env:
        - name: MYSQL_HOST
          value: {{ .Values.app.mysql.host | default (printf "%s-db" (include "rmt.fullname" . )) }}
